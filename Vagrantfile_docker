# -*- mode: ruby -*-
# vi: set ft=ruby :

# VM 설정
VM_IMAGE = "nobreak-labs/ubuntu-noble"
VM_CONFIG = {
  name: "docker",
  image: VM_IMAGE,
  cpus: 2,
  memory: 4096,
  ip: "192.168.56.101"
}

# 프로비저닝 스크립트
CHANGE_APT_REPO = <<-SCRIPT
  ARCH=$(uname -m)
  if [ "$ARCH" = "x86_64" ]; then
    sed -i 's|^URIs:.*|URIs: http://ftp.kaist.ac.kr/ubuntu/|g' /etc/apt/sources.list.d/ubuntu.sources
  elif [ "$ARCH" = "aarch64" ]; then
    sed -i 's|^URIs:.*|URIs: http://ftp.kaist.ac.kr/ubuntu-ports/|g' /etc/apt/sources.list.d/ubuntu.sources
  fi
SCRIPT

INSTALL_DOCKER = <<-SCRIPT
  # Add Docker's official GPG key:
  apt-get update
  apt-get -y install ca-certificates curl
  install -m 0755 -d /etc/apt/keyrings
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
  chmod a+r /etc/apt/keyrings/docker.asc

  # Add the repository to Apt sources:
  echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
    $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
    tee /etc/apt/sources.list.d/docker.list > /dev/null
  apt-get update
  apt-get -y install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
  usermod -aG docker vagrant
SCRIPT

# VM 템플릿
Vagrant.configure("2") do |config|
  config.vm.define VM_CONFIG[:name] do |node|
    node.vm.box = VM_CONFIG[:image]
    node.vm.provider "virtualbox" do |vb|
      vb.name = VM_CONFIG[:name]
      vb.cpus = VM_CONFIG[:cpus]
      vb.memory = VM_CONFIG[:memory]
    end
    node.vm.hostname = VM_CONFIG[:name]
    node.vm.network "private_network", ip: VM_CONFIG[:ip], nic_type: "virtio"
    
    if node.vm.box.include?("ubuntu")
      node.vm.provision "shell", inline: CHANGE_APT_REPO
      node.vm.provision "shell", inline: INSTALL_DOCKER
    end
  end
end
