# -*- mode: ruby -*-
# vi: set ft=ruby :

# VM 설정
VM_IMAGE = "nobreak-labs/ubuntu-noble"
VM_NAME_PREFIX = "kube"
VM_SUBNET = "192.168.56."
VM_CONFIG_CONTROL_PLANE = {
  count: 1, cpus: 2, memory: 3072, extra_disk_enabled: false, extra_disk_size: 10 # GB
}
VM_CONFIG_WORKER_NODE = {
  count: 3, cpus: 2, memory: 2560, extra_disk_enabled: false, extra_disk_size: 10 # GB
}

# 프로비저닝 스크립트
CHANGE_APT_REPO = <<-SCRIPT
  ARCH=$(uname -m)
  RELEASE=$(lsb_release -cs)
  if [ "$RELEASE" = "jammy" ]; then
    # Ubuntu 22.04
    if [ "$ARCH" = "x86_64" ]; then
      sed -i 's/archive.ubuntu.com\\|kr.archive.ubuntu.com\\|security.ubuntu.com/ftp.kaist.ac.kr/g' /etc/apt/sources.list
    elif [ "$ARCH" = "aarch64" ]; then
      sed -i 's/ports.ubuntu.com/ftp.kaist.ac.kr/g' /etc/apt/sources.list
    fi
  elif [ "$RELEASE" = "noble" ]; then
    # Ubuntu 24.04
    if [ "$ARCH" = "x86_64" ]; then
      sed -i 's|^URIs:.*|URIs: http://ftp.kaist.ac.kr/ubuntu/|g' /etc/apt/sources.list.d/ubuntu.sources
    elif [ "$ARCH" = "aarch64" ]; then
      sed -i 's|^URIs:.*|URIs: http://ftp.kaist.ac.kr/ubuntu-ports/|g' /etc/apt/sources.list.d/ubuntu.sources
    fi
  fi
SCRIPT

VMS = (1..VM_CONFIG_CONTROL_PLANE[:count]).map do |i|
  {
    name: "#{VM_NAME_PREFIX}-control#{i}",
    image: VM_IMAGE,
    cpus: VM_CONFIG_CONTROL_PLANE[:cpus],
    memory: VM_CONFIG_CONTROL_PLANE[:memory],
    extra_disk_enabled: VM_CONFIG_CONTROL_PLANE[:extra_disk_enabled],
    extra_disk_size: VM_CONFIG_CONTROL_PLANE[:extra_disk_size] * 1024,
    ip: "#{VM_SUBNET}1#{i}"
  }
end

VMS += (1..VM_CONFIG_WORKER_NODE[:count]).map do |i|
  {
    name: "#{VM_NAME_PREFIX}-node#{i}",
    image: VM_IMAGE,
    cpus: VM_CONFIG_WORKER_NODE[:cpus],
    memory: VM_CONFIG_WORKER_NODE[:memory],
    extra_disk_enabled: VM_CONFIG_WORKER_NODE[:extra_disk_enabled],
    extra_disk_size: VM_CONFIG_WORKER_NODE[:extra_disk_size] * 1024,
    ip: "#{VM_SUBNET}2#{i}"
  }
end

Vagrant.configure("2") do |config|
  VMS.each do |vm|
    config.vm.define vm[:name] do |node|  
      node.vm.hostname = vm[:name]
      node.vm.box = vm[:image]
      node.vm.network "private_network", ip: vm[:ip], nic_type: "virtio"
      node.vm.provider "virtualbox" do |vb|
        vb.linked_clone = false
        vb.name = vm[:name]
        vb.cpus = vm[:cpus]
        vb.memory = vm[:memory]
        if vm[:extra_disk_enabled] == true
          disk_path = "disks/#{vm[:name]}.vmdk"
          unless File.exist?(disk_path)
            vb.customize ['createmedium', 'disk', '--format', 'VMDK', '--filename', disk_path, '--size', vm[:extra_disk_size]]
          end
          vb.customize ['storageattach', :id, '--storagectl', 'VirtIO Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', disk_path]
        end
      end
      node.vm.provision "shell", inline: CHANGE_APT_REPO
    end
  end
end
